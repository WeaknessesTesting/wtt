Flawfinder version 2.0.10, (C) 2001-2019 David A. Wheeler.
Number of rules (primarily dangerous function names) in C/C++ ruleset: 223
Examining socket_wrapper/obj/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c
Examining socket_wrapper/obj/config.h
Examining socket_wrapper/src/socket_wrapper.c
Examining socket_wrapper/tests/test_thread_echo_tcp_connect.c
Examining socket_wrapper/tests/test_fork_thread_deadlock.c
Examining socket_wrapper/tests/torture.h
Examining socket_wrapper/tests/test_echo_tcp_sendmsg_recvmsg.c
Examining socket_wrapper/tests/test_swrap_unit.c
Examining socket_wrapper/tests/test_fcntl.c
Examining socket_wrapper/tests/test_ioctl.c
Examining socket_wrapper/tests/test_echo_udp_sendto_recvfrom.c
Examining socket_wrapper/tests/test_thread_echo_tcp_sendmsg_recvmsg.c
Examining socket_wrapper/tests/test_tcp_socket_overwrite.c
Examining socket_wrapper/tests/test_max_sockets.c
Examining socket_wrapper/tests/thread_deadlock.c
Examining socket_wrapper/tests/torture.c
Examining socket_wrapper/tests/test_echo_tcp_writev_readv.c
Examining socket_wrapper/tests/test_echo_tcp_get_peer_sock_name.c
Examining socket_wrapper/tests/test_echo_tcp_bind.c
Examining socket_wrapper/tests/test_echo_udp_send_recv.c
Examining socket_wrapper/tests/test_echo_tcp_socket_options.c
Examining socket_wrapper/tests/test_thread_sockets.c
Examining socket_wrapper/tests/test_close_failure.c
Examining socket_wrapper/tests/test_echo_udp_sendmsg_recvmsg.c
Examining socket_wrapper/tests/echo_srv.c
Examining socket_wrapper/tests/test_echo_tcp_sendmsg_recvmsg_fd.c
Examining socket_wrapper/tests/test_tcp_dup2.c
Examining socket_wrapper/tests/test_tcp_listen.c
Examining socket_wrapper/tests/test_thread_echo_tcp_write_read.c
Examining socket_wrapper/tests/test_sendmsg_recvmsg_fd.c
Examining socket_wrapper/tests/test_echo_tcp_write_read.c
Examining socket_wrapper/tests/test_echo_tcp_connect.c
Examining socket_wrapper/tests/test_thread_echo_udp_send_recv.c

FINAL RESULTS:

socket_wrapper/src/socket_wrapper.c:444:  [4] (format) vsnprintf:
  If format strings can be influenced by an attacker, they can be exploited,
  and note that sprintf variations do not always \0-terminate (CWE-134). Use
  a constant for the format specification.
socket_wrapper/src/socket_wrapper.c:1442:  [4] (format) snprintf:
  If format strings can be influenced by an attacker, they can be exploited,
  and note that sprintf variations do not always \0-terminate (CWE-134). Use
  a constant for the format specification.
socket_wrapper/src/socket_wrapper.c:1892:  [4] (buffer) sscanf:
  The scanf() family's %s operation, without a limit specification, permits
  buffer overflows (CWE-120, CWE-20). Specify a limit to %s, or use a
  different input function. If the scanf format is influenceable by an
  attacker, it's exploitable.
socket_wrapper/src/socket_wrapper.c:434:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/src/socket_wrapper.c:658:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/src/socket_wrapper.c:659:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/src/socket_wrapper.c:1277:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/src/socket_wrapper.c:1494:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/src/socket_wrapper.c:1503:  [3] (buffer) realpath:
  This function does not protect against buffer overflows, and some
  implementations can overflow internally (CWE-120/CWE-785!). Ensure that the
  destination buffer is at least of size MAXPATHLEN, andto protect against
  implementation problems, the input argument should also be checked to
  ensure it is no larger than MAXPATHLEN.
socket_wrapper/src/socket_wrapper.c:1525:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/src/socket_wrapper.c:1565:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/src/socket_wrapper.c:1625:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/src/socket_wrapper.c:1758:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/src/socket_wrapper.c:2711:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/tests/echo_srv.c:97:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/tests/echo_srv.c:107:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/tests/echo_srv.c:896:  [3] (buffer) getopt_long:
  Some older implementations do not protect against internal buffer overflows
  (CWE-120, CWE-20). Check implementation on installation, or limit the size
  of all string inputs.
socket_wrapper/tests/torture.c:66:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/tests/torture.c:76:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/tests/torture.c:94:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/tests/torture.c:234:  [3] (buffer) getenv:
  Environment variables are untrustable input if they can be set by an
  attacker. They can have any content and length, and the same variable can
  be set more than once (CWE-807, CWE-20). Check environment variables
  carefully before using them.
socket_wrapper/tests/torture.c:311:  [3] (random) srand:
  This function is not sufficiently random for security-related functions
  such as key and nonce creation (CWE-327). Use a more secure technique for
  acquiring random values.

ANALYSIS SUMMARY:

Hits = 22
Lines analyzed = 15366 in approximately 0.27 seconds (56490 lines/second)
Physical Source Lines of Code (SLOC) = 11630
Hits@level = [0]  90 [1]  26 [2]  48 [3]  19 [4]   7 [5]   0
Hits@level+ = [0+] 190 [1+] 100 [2+]  74 [3+]  26 [4+]   7 [5+]   0
Hits/KSLOC@level+ = [0+] 16.3371 [1+] 8.59845 [2+] 6.36285 [3+] 2.2356 [4+] 0.601892 [5+]   0
Minimum risk level = 3
Not every hit is necessarily a security vulnerability.
There may be other security vulnerabilities; review your code!
See 'Secure Programming HOWTO'
(https://dwheeler.com/secure-programs) for more information.